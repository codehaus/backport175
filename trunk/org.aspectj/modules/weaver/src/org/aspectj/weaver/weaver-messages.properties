#####################################################################
# Copyright (c) 2004 Contributors.
# All rights reserved. 
# This program and the accompanying materials are made available 
# under the terms of the Common Public License v1.0 
# which accompanies this distribution and is available at 
# http://www.eclipse.org/legal/cpl-v10.html 
#  
# Contributors: 
#     Adrian Colyer - Initial version
#####################################################################

# Messages output by the AspectJ Weaver

# Pointcut related messages...
argsInDeclare=args() pointcut designator cannot be used in declare statement
cflowInDeclare=cflow{0}() pointcut designator cannot be used in declare statement
ifInDeclare=if() pointcut designator cannot be used in declare statement
thisOrTargetInDeclare={0}() pointcut designator cannot be used in declare statement
abstractPointcut={0} is abstract
abstractPointcutNotMadeConcrete=inherited abstract {0} is not made concrete in {1}
conflictingInheritedPointcuts=conflicting inherited pointcuts in {0}
circularPointcutDeclaration=circular pointcut declaration involving: {0}
cantFindPointcut=can''t find pointcut ''{0}'' on {1}
exactTypePatternRequired=exact type pattern required
cantBindType=can''t bind type name ''{0}''
wildcardTypePatternNotAllowed=wildcard type pattern not allowed, must use type name

# Declare parents messages...
decpObject=can''t change the parents of java.lang.Object
cantExtendSelf=type ''{0}''can not extend itself
interfaceExtendClass=interface can not extend a class
decpHierarchy=can only insert a class into hierarchy, but {0} is not a subtype of {1}

# declare precedence messages...
multipleMatchesInPrecedence=multiple matches for {0}, matches both {1} and {2}
circularityInPrecedenceStar=circularity in declare precedence, ''*'' occurs more than once
nonAspectTypesInPrecedence=Non-aspect types can only be specified in a declare precedence statement when subtypes are included.  Non-aspect type is : {0}
circularityInPrecedenceTwo=circularity in declare precedence, ''{0}'' matches two patterns

# declare soft messages...
notThrowable={0} is not a subtype of Throwable

# itd messages...
itdConsOnAspect=can''t declare constructor on an aspect
returnTypeMismatch=can''t override {0} with {1} return types don''t match
paramTypeMismatch=can''t override {0} with {1} parameter types don''t match
visibilityReduction=can''t override {0} with {1} visibility is reduced
doesntThrow=overriden method doesn't throw {0}
overriddenStatic={0} cannot override {1}; overridden method is static
overridingStatic={0} cannot override {1}; overriding method is static
itdConflict=intertype declaration from {0} conflicts with intertype declaration: {1} from {2}
itdMemberConflict=inter-type declaration from {0} conflicts with existing member: {1}
itdNonExposedImplementor=type {0} must be accessible for weaving interface inter type declaration from aspect {1}
itdAbstractMustBePublicOnInterface=abstract intertype method declaration ''{0}'' on interface {1} must be declared public (compiler limitation)

# advice messages...
nonVoidReturn=applying to join point that doesn't return void: {0}
incompatibleReturnType=incompatible return type applying to {0}
cantThrowChecked=can''t throw checked exception ''{0}'' at this join point ''{1}''
circularDependency=can''t determine precedence between two or more pieces of advice that apply to the same join point: {0}

# aspect messages..
missingPerClause=expected per clause on super aspect not found on {0}
wrongPerClause=wrong kind of per clause on super, expected {0} but found {1}

# Reweavable messages...
alreadyWoven=class ''{0}'' is already woven and has not been built with -Xreweavable
reweavableMode=weaver operating in reweavable mode.  Need to verify any required types exist.
processingReweavable=processing reweavable type {0}: {1}
missingReweavableType=type {0} is needed by reweavable type {1}
verifiedReweavableType=successfully verified type {0} exists.  Originates from {1}
aspectNeeded=aspect {0} is needed when using type {1}

# The infamous and deserving a category all of its own...
cantFindType=can''t find type {0}
cantFindCoreType=can''t find critical required type {0}
cantFindTypeWithinpcd=Unable to find type {0} whilst processing within() pointcut at this source location
cftDuringAroundWeave=Can't find type {0} whilst applying around advice
cftDuringAroundWeavePreinit=Can't find type {0} whilst applying around advice to preinitialization join point
cftExceptionType=Can't find exception type {0} whilst processing advice
cftArgType=Can't find type {0} whilst processing args() pcd

# Implementation limitations...
decpBinaryLimitation=can''t use declare parents to change superclass of binary form ''{0}'' (implementation limitation)
overwriteJSR45=overwriting JSR45 information for {0} (compiler limitation)
ifInPerClause=if() pointcut designator cannot be used directly in a per clause (compiler limitation).  Create a named pointcut containing the if() and refer to it
ifLexicallyInCflow=if not supported lexically within cflow (compiler limitation)
onlyBeforeOnHandler=Only before advice is supported on handler join points (compiler limitation)
aroundOnPreInit=around on pre-initialization not supported (compiler limitation)
aroundOnInit=around on initialization not supported (compiler limitation)
aroundOnInterfaceStaticInit=around on staticinitialization of interface ''{0}'' not supported (compiler limitation)

# Bytecode generation nasties...
problemGeneratingMethod=problem generating method {0}.{1} : {2}
classTooBig=The class {0} exceeds the maximum class size supported by the JVM (constant pool too big).

# Classpath messages
zipfileEntryMissing=zipfile classpath entry does not exist: {0}
zipfileEntryInvalid=zipfile classpath entry is invalid: {0} <{1}>
directoryEntryMissing=directory classpath entry does not exist: {0}
outjarInInputPath=-outjar cannot be a member of -injars, -inpath or -aspectpath

# Lint messages
problemLoadingXLint=problem loading Xlint properties file: {0}, {1}
unableToLoadXLintDefault=couldn''t load XlintDefault.properties
errorLoadingXLintDefault=problem loading XlintDefault.properties, {0}
invalidXLintKey=invalid Xlint key: {0}
invalidXLintMessageKind=invalid Xlint message kind (must be one of ignore, warning, error): {0}

# Java5 

# Enum
itdcOnEnumNotAllowed=can''t make inter-type constructor declarations on enum types
itdmOnEnumNotAllowed=can''t make inter-type method declarations on enum types
itdfOnEnumNotAllowed=can''t make inter-type field declarations on enum types

# Enum
itdcOnAnnotationNotAllowed=can''t make inter-type constructor declarations on annotation types
itdmOnAnnotationNotAllowed=can''t make inter-type method declarations on annotation types
itdfOnAnnotationNotAllowed=can''t make inter-type field declarations on annotation types


